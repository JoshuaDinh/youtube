[{"/Users/joshuadinh/Desktop/youtube/src/index.js":"1","/Users/joshuadinh/Desktop/youtube/src/App.js":"2","/Users/joshuadinh/Desktop/youtube/src/reportWebVitals.js":"3","/Users/joshuadinh/Desktop/youtube/src/requests.js":"4","/Users/joshuadinh/Desktop/youtube/src/Components/Searchbar/Searchbar.js":"5","/Users/joshuadinh/Desktop/youtube/src/GoogleAuth.js":"6","/Users/joshuadinh/Desktop/youtube/src/Components/VideoPlayer/VideoPlayer.js":"7","/Users/joshuadinh/Desktop/youtube/src/Components/AddComment/AddComment.js":"8","/Users/joshuadinh/Desktop/youtube/src/Components/Comments/Comments.js":"9","/Users/joshuadinh/Desktop/youtube/src/Components/VideoSuggestions/VideoSuggestions.js":"10"},{"size":515,"mtime":1613176851470,"results":"11","hashOfConfig":"12"},{"size":8867,"mtime":1618520501797,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610584190527,"results":"14","hashOfConfig":"12"},{"size":597,"mtime":1612980307996,"results":"15","hashOfConfig":"12"},{"size":1389,"mtime":1614977365067,"results":"16","hashOfConfig":"12"},{"size":662,"mtime":1610901737052,"results":"17","hashOfConfig":"12"},{"size":1874,"mtime":1615491923054,"results":"18","hashOfConfig":"12"},{"size":950,"mtime":1614964023627,"results":"19","hashOfConfig":"12"},{"size":1556,"mtime":1618522267558,"results":"20","hashOfConfig":"12"},{"size":1009,"mtime":1614989640629,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1ws4woy",{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"25"},"/Users/joshuadinh/Desktop/youtube/src/index.js",["48"],"import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["49","50"],"/Users/joshuadinh/Desktop/youtube/src/App.js",["51","52","53","54","55","56","57","58","59","60"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Searchbar } from \"./Components/Searchbar/Searchbar\";\nimport { VideoPlayer } from \"./Components/VideoPlayer/VideoPlayer\";\nimport { AddComment } from \"./Components/AddComment/AddComment\";\nimport { Comments } from \"./Components/Comments/Comments\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_KEY } from \"./requests\";\nimport { getTokenFromUrl } from \"./GoogleAuth\";\nimport { VideoSuggestions } from \"./Components/VideoSuggestions/VideoSuggestions\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"Javacript\");\n  const [searchVideo, setSearchVideo] = useState(\"\");\n  const [videoId, setVideoId] = useState(\"4UZrsTqkcW4\");\n  const [selectedVideoData, setSelectedVideoData] = useState(\"\");\n  const [selectedVideoStats, setSelectedVideoStats] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [token, setToken] = useState([]);\n\n  // Sets authorization token from Google_OAuth\n  // useEffect(() => {\n  //   const _token = getTokenFromUrl();\n  //   if (_token) {\n  //     setToken(_token);\n  //   }\n  // }, []);\n\n  // search video database for results of input\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const searchVideos = await axios.get(\n  //       \"https://www.googleapis.com/youtube/v3/search\",\n  //       {\n  //         params: {\n  //           part: \"snippet\",\n  //           q: input,\n  //           key: API_KEY,\n  //           maxResults: 6,\n  //         },\n  //       }\n  //     );\n  //     setSearchResults(searchVideos.data.items);\n  //   };\n  //   fetchData();\n  // }, [searchVideo]);\n\n  // Get selected video data for display\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const fetchVideoById = await axios.get(\n  //       \"https://www.googleapis.com/youtube/v3/videos\",\n  //       {\n  //         params: {\n  //           part: \"snippet,contentDetails,statistics\",\n  //           id: videoId,\n  //           key: API_KEY,\n  //           maxResults: 1,\n  //         },\n  //       }\n  //     );\n  //     fetchVideoById.data.items.map((data) => {\n  //       setSelectedVideoData(data.snippet);\n  //       setSelectedVideoStats(data.statistics);\n  //     });\n  //   };\n  //   if (videoId) {\n  //     fetchData();\n  //   }\n  // }, [videoId]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <div className=\"App\">\n            <Searchbar\n              input={input}\n              setInput={setInput}\n              searchVideo={searchVideo}\n              setSearchVideo={setSearchVideo}\n              token={token}\n              setToken={setToken}\n            />\n            <VideoPlayer\n              videoId={videoId}\n              selectedVideoData={selectedVideoData}\n              selectedVideoStats={selectedVideoStats}\n            />\n            <Comments videoId={videoId} />\n            <VideoSuggestions\n              searchResults={searchResults}\n              setVideoId={setVideoId}\n            />\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n\n// useEffect(() => {\n//   const fetchData = async () => {\n//     const getLikedVideos = await axios.get(\n//       `https://www.googleapis.com/youtube/v3/videos?access_token=${token}`,\n//       {\n//         params: {\n//           part: \"snippet,contentDetails,statistics\",\n//           key: API_KEY,\n//           myRating: \"like\",\n//           maxResults: 25,\n//         },\n//       }\n//     );\n//     const getSubscriptions = await axios.get(\n//       `https://www.googleapis.com/youtube/v3/subscriptions?access_token=${token}`,\n//       {\n//         params: {\n//           part: \"snippet\",\n//           key: API_KEY,\n//           mine: true,\n//           maxResults: 25,\n//         },\n//       }\n//     );\n//     const getPlayLists = await axios.get(\n//       `https://www.googleapis.com/youtube/v3/playlists?access_token=${token}`,\n//       {\n//         params: {\n//           part: \"snippet,contentDetails\",\n//           key: API_KEY,\n//           mine: true,\n//           maxResults: 25,\n//         },\n//       }\n//     );\n//     setPlayLists(getPlayLists.data.items);\n//     setSubscriptions(getSubscriptions.data.items);\n//     setLikedVideos(getLikedVideos.data.items);\n//   };\n//   fetchData();\n// }, [token]);\n\n// useEffect(() => {\n//   const fetchData = async () => {\n//     const getSearchedVideos = await axios.get(\n//       \"https://www.googleapis.com/youtube/v3/search\",\n//       {\n//         params: {\n//           part: \"snippet\",\n//           q: input,\n//           key: API_KEY,\n//           maxResults: 25,\n//         },\n//       }\n//     );\n//     setVideos(getSearchedVideos.data.items);\n//   };\n\n//   const timeoutId = setTimeout(() => {\n//     if (input) {\n//       fetchData();\n//     }\n//   }, 1000);\n\n//   return () => {\n//     clearTimeout(timeoutId);\n//   };\n// }, [input]);\n\n// useEffect(() => {\n//   async function fetchVideoInfoById() {\n//     const videoById = await axios.get(\n//       \"https://www.googleapis.com/youtube/v3/videos\",\n//       {\n//         params: {\n//           part: \"snippet\",\n//           id: videoId,\n//           key: API_KEY,\n//           maxResults: 25,\n//         },\n//       }\n//     );\n//     const fetchComments = await axios.get(\n//       \"https:www.googleapis.com/youtube/v3/commentThreads\",\n//       {\n//         params: {\n//           part: \"snippet\",\n//           videoId: videoId,\n//           key: API_KEY,\n//           maxResults: 25,\n//         },\n//       }\n//     );\n//     setCommentThreads(fetchComments.data.items);\n//     setVideoInfoById(videoById.data.items[0]);\n//   }\n//   if (videoId) {\n//     fetchVideoInfoById();\n//   }\n// }, [videoId]);\n\n// <Router>\n//       <div className=\"App\">\n//         <div className=\"app-fixed-header\">\n//           {\" \"}\n//           <Searchbar\n//             input={input}\n//             setInput={setInput}\n//             searchVideo={searchVideo}\n//             setSearchVideo={setSearchVideo}\n//             openWatchSidebar={openWatchSidebar}\n//             setOpenWatchSidebar={setOpenWatchSidebar}\n//             toggleMainSidebar={toggleMainSidebar}\n//             setToggleMainSidebar={setToggleMainSidebar}\n//             ToggleSidebars={ToggleSidebars}\n//           />\n//           <SuggestionsRow />\n//         </div>\n\n//         <Switch>\n//           <Route path=\"/Watch\">\n//             <div className=\"app-watch\">\n//               {openWatchSidebar && (\n//                 <WatchSidebar\n//                   openWatchSidebar={openWatchSidebar}\n//                   setOpenWatchSidebar={setOpenWatchSidebar}\n//                   ToggleSidebars={ToggleSidebars}\n//                 />\n//               )}\n//               <WatchVideo videoId={videoId} />\n//             </div>\n//           </Route>\n//           <div className=\"app-content\">\n//             {toggleMainSidebar ? (\n//               <ToggleMainSidebar\n//                 setToggleMainSidebar={setToggleMainSidebar}\n//                 toggleMainSidebar={toggleMainSidebar}\n//               />\n//             ) : (\n//               <MainSidebar />\n//             )}\n//             <Route path=\"/Results\">\n//               <div className=\"app-results\">\n//                 <Results searchResults={searchResults} />\n//               </div>\n//             </Route>\n//             <Route path=\"/Home\">\n//               <div className=\"app-home\">\n//                 {/* <FeaturedVideoFrame /> */}\n//                 <VideoCardRow\n//                   setVideoId={setVideoId}\n//                   fetchUrl={requests.fetchReact}\n//                   rowTitle=\"React.Js \"\n//                 />{\" \"}\n//                 <VideoCardRow\n//                   setVideoId={setVideoId}\n//                   fetchUrl={requests.fetchJavascript}\n//                   rowTitle=\"Javascript\"\n//                 />\n//                 <VideoCardRow\n//                   setVideoId={setVideoId}\n//                   fetchUrl={requests.fetchTechnology}\n//                   rowTitle=\"Technology\"\n//                 />\n//                 <VideoCardRow\n//                   setVideoId={setVideoId}\n//                   fetchUrl={requests.fetchBitcoin}\n//                   rowTitle=\"Bitcoin\"\n//                 />{\" \"}\n//               </div>\n//             </Route>\n//           </div>{\" \"}\n//         </Switch>\n//       </div>\n//     </Router>\n\n// {searchResults.map((video) => {\n//   return (\n//     <VideoCard\n//       setVideoId={() => setVideoId(video.id.videoId)}\n//       title=\"Async-await\"\n//       title={video.snippet.title}\n//       thumbnail={video.snippet.thumbnails.high.url}\n//     />\n//   );\n// })}\n\n{\n  /* <MainSidebar\ntoggleMainSidebar={toggleMainSidebar}\nsetToggleMainSidebar={setToggleMainSidebar}\n/> */\n}\n","/Users/joshuadinh/Desktop/youtube/src/reportWebVitals.js",[],"/Users/joshuadinh/Desktop/youtube/src/requests.js",[],"/Users/joshuadinh/Desktop/youtube/src/Components/Searchbar/Searchbar.js",["61","62"],"import React, { useState, useEffect } from \"react\";\nimport \"./searchbar.css\";\nimport logo from \"../../images/logo.png\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { loginUrl } from \"../../GoogleAuth\";\nimport { Avatar } from \"@material-ui/core\";\n\nexport const Searchbar = ({ input, setInput, setSearchVideo, token }) => {\n  const submitSearch = (e) => {\n    e.preventDefault(e);\n    setSearchVideo(input);\n  };\n\n  return (\n    <header className=\"searchbar\">\n      <form\n        className=\"searchbar-form\"\n        onSubmit={(e) => {\n          submitSearch(e);\n        }}\n      >\n        <img className=\"youtube-logo\" src={logo} alt=\"youtube-logo\" />\n        <div className=\"searchbar-input-container\">\n          <input\n            className=\"searchbar-input\"\n            placeholder=\"Search..\"\n            type=\"text\"\n            onChange={(e) => setInput(e.target.value)}\n          ></input>\n          <div\n            className=\"router-link\"\n            onClick={(input) => {\n              setSearchVideo(input);\n            }}\n          >\n            <SearchIcon className=\"searchbar-search-icon\" />\n          </div>\n        </div>\n\n        {token.length > 1 ? (\n          <Avatar className=\"searchbar-avatar-icon\" />\n        ) : (\n          <a href={loginUrl} className=\"searchbar-login\">\n            Sign In\n          </a>\n        )}\n      </form>\n    </header>\n  );\n};\n","/Users/joshuadinh/Desktop/youtube/src/GoogleAuth.js",[],"/Users/joshuadinh/Desktop/youtube/src/Components/VideoPlayer/VideoPlayer.js",["63","64","65"],"import React, { useState } from \"react\";\nimport \"./videoPlayer.css\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport { Avatar } from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nconst VideoDetails = ({ videoId, selectedVideoData, selectedVideoStats }) => {\n  return (\n    <div className=\"video-details\">\n      <div className=\"video-details-stats\">\n        <h3>{selectedVideoData.title}</h3>\n      </div>\n      <div className=\"video-details-info\">\n        <div className=\"video-details-account\">\n          <Avatar className=\"video-details-avatar\" />\n          <p>{selectedVideoData.channelTitle}</p>\n          <div />\n        </div>\n        <div className=\"video-details-icon\">\n          <ThumbUpIcon />\n          {selectedVideoStats.likeCount}\n          <ThumbDownIcon /> {selectedVideoStats.dislikeCount}\n          <VisibilityIcon />\n          {selectedVideoStats.viewCount}\n        </div>\n      </div>\n      <div className=\"video-details-description-container\">\n        <div className=\"video-details-description\">\n          {selectedVideoData.description}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const VideoPlayer = ({\n  videoId,\n  selectedVideoData,\n  selectedVideoStats,\n}) => {\n  const videoSrc = `https://www.youtube.com/embed/${videoId}`;\n  // video id needed for video\n\n  return (\n    <div className=\"video-player\">\n      <iframe\n        className=\"video-player-iframe\"\n        title=\"videoPlayer\"\n        autoPlay={1}\n        src={videoSrc}\n      />\n      {\n        <VideoDetails\n          videoId={videoId}\n          selectedVideoData={selectedVideoData}\n          selectedVideoStats={selectedVideoStats}\n        />\n      }\n    </div>\n  );\n};\n","/Users/joshuadinh/Desktop/youtube/src/Components/AddComment/AddComment.js",[],"/Users/joshuadinh/Desktop/youtube/src/Components/Comments/Comments.js",[],"/Users/joshuadinh/Desktop/youtube/src/Components/VideoSuggestions/VideoSuggestions.js",["66"],"import React from \"react\";\nimport \"./videoSuggestions.css\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport jslogo from \"../../images/js-logo.png\";\n\nconst VideoCard = ({ title, thumbnail, setVideoId, videoId }) => {\n  return (\n    <div onClick={() => setVideoId(videoId)} className=\"video-card\">\n      <div className=\"video-card-overlay\">\n        <p className=\"video-card-title\">{title}</p>\n        <PlayCircleOutlineIcon className=\"video-card-play-icon\" />\n      </div>\n      <img className=\"video-card-img\" src={thumbnail} alt=\"#\" />\n    </div>\n  );\n};\n\nexport const VideoSuggestions = ({ searchResults, setVideoId }) => {\n  return (\n    <div className=\"video-suggestions\">\n      {searchResults.map((data) => {\n        return (\n          <VideoCard\n            setVideoId={setVideoId}\n            videoId={data.id.videoId}\n            title={data.snippet.title}\n            thumbnail={data.snippet.thumbnails.medium.url}\n          />\n        );\n      })}\n    </div>\n  );\n};\n",{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"76","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":20},{"ruleId":"67","severity":1,"message":"77","line":7,"column":50,"nodeType":"69","messageId":"70","endLine":7,"endColumn":54},{"ruleId":"67","severity":1,"message":"78","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":13},{"ruleId":"67","severity":1,"message":"79","line":9,"column":10,"nodeType":"69","messageId":"70","endLine":9,"endColumn":17},{"ruleId":"67","severity":1,"message":"80","line":10,"column":10,"nodeType":"69","messageId":"70","endLine":10,"endColumn":25},{"ruleId":"67","severity":1,"message":"81","line":17,"column":29,"nodeType":"69","messageId":"70","endLine":17,"endColumn":49},{"ruleId":"67","severity":1,"message":"82","line":18,"column":30,"nodeType":"69","messageId":"70","endLine":18,"endColumn":51},{"ruleId":"67","severity":1,"message":"83","line":19,"column":25,"nodeType":"69","messageId":"70","endLine":19,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":292,"column":1,"nodeType":"86","messageId":"87","endLine":297,"endColumn":2},{"ruleId":"67","severity":1,"message":"88","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"75","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"88","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"89","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":15},{"ruleId":"67","severity":1,"message":"90","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":18},{"ruleId":"67","severity":1,"message":"91","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'useEffect' is defined but never used.","'AddComment' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'API_KEY' is defined but never used.","'getTokenFromUrl' is defined but never used.","'setSelectedVideoData' is assigned a value but never used.","'setSelectedVideoStats' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'AddIcon' is defined but never used.","'RemoveIcon' is defined but never used.","'jslogo' is defined but never used.","no-global-assign","no-unsafe-negation"]